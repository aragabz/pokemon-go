# --------------------------------------------------------------------------------------------------
# ------------------------------------------ versions ----------------------------------------------
# --------------------------------------------------------------------------------------------------
[versions]
kotlin = "1.5.31"
gradle = "7.0.3"
googleService = "4.3.10"
crashlytics = "2.8.0"
onesignalClassPath = "0.13.4"
sentry = "1.7.31"
appcompat = "1.3.1"
material = "1.4.0"
retrofit = "2.9.0"
glide = "4.12.0"
activityVersion = "1.4.0"
cameraxVersion = "1.0.2"
coreVersion = "1.7.0"
emoji2Version = "1.0.0-rc01"
fragmentVersion = "1.3.6"
hilt = "2.40"
lifecycleVersion = "2.4.0"
archVersion = "2.1.0"
navVersion = "2.4.0-beta01"
roomVersion = "2.3.0"
workVersion = "2.7.0"
okhttpVersion = "5.0.0-alpha.2"
# --------------------------------------------------------------------------------------------------
# ------------------------------------------ libraries ---------------------------------------------
# --------------------------------------------------------------------------------------------------
[libraries]
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
material = { module = "com.google.android.material:material", version.ref = "material" }
vectordrawable = "androidx.vectordrawable:vectordrawable-animated:1.1.0"
legacySupport = "androidx.legacy:legacy-support-v4:1.0.0"
cardview = "androidx.cardview:cardview:1.0.0"
timber = "com.jakewharton.timber:timber:5.0.1"
materialdatetimepicker = "com.wdullaer:materialdatetimepicker:3.2.2"
socketIo = "io.socket:socket.io-client:1.0.0"
countryCodePicker = "com.hbb20:ccp:2.5.4"
onesignal = "com.onesignal:OneSignal:4.6.1"
tutoshowcase = "com.github.florent37:tutoshowcase:1.0.1"
androidChart = "com.github.PhilJay:MPAndroidChart:3.1.0"
monthandyearpicker = "com.whiteelephant:monthandyearpicker:1.3.0"
calligraphy3 = "io.github.inflationx:calligraphy3:3.1.1"
viewpump = "io.github.inflationx:viewpump:2.0.3"
constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.1"
preference = "androidx.preference:preference-ktx:1.1.1"
sentryAndroid = "io.sentry:sentry-android:5.2.0"
materialDialogsCore = "com.afollestad.material-dialogs:core:3.3.0"
coil = "io.coil-kt:coil:1.4.0"
customview = "androidx.customview:customview:1.1.0"
profileInstaller = "androidx.profileinstaller:profileinstaller:1.1.0-beta01"
recommendation = "androidx.recommendation:recommendation:1.0.0"
datastoreCore = "androidx.datastore:datastore-core:1.0.0"
datastorePreferencesCore = "androidx.datastore:datastore-preferences-core:1.0.0"
savedStateKtx = "androidx.savedstate:savedstate-ktx:1.1.0"
documentfile = "androidx.documentfile:documentfile:1.0.1"
drawerlayout = "androidx.drawerlayout:drawerlayout:1.1.1"
dynamicAnimation = "androidx.dynamicanimation:dynamicanimation-ktx:1.1.0-alpha03"
activity = { module = "androidx.activity:activity-ktx", version.ref = "activityVersion" }
asynclayoutinflater = "androidx.asynclayoutinflater:asynclayoutinflater:1.0.0"
collection = "androidx.collection:collection-ktx:1.2.0-beta01"
concurrent = "androidx.concurrent:concurrent-futures-ktx:1.1.0"
contentPager = "androidx.contentpager:contentpager:1.0.0"
paging = "androidx.paging:paging-runtime:3.0.1"
percentlayout = "androidx.percentlayout:percentlayout:1.0.0"
shareTarget = "androidx.sharetarget:sharetarget:1.1.0"
startupRuntime = "androidx.startup:startup-runtime:1.1.0"
slidingpanelayout = "androidx.slidingpanelayout:slidingpanelayout:1.2.0-beta01"
swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
viewpager2 = "androidx.viewpager2:viewpager2:1.0.0"
webkit = "androidx.webkit:webkit:1.4.0"
window = "androidx.window:window:1.0.0-beta03"
resourceinspection = "androidx.resourceinspection:resourceinspection-annotation:1.0.0-rc01"
selectableroundedimageview = "com.joooonho:selectableroundedimageview:1.0.1"
otpView = "com.github.aabhasr1:OtpView:v1.1.2-ktx"
gson = "com.google.code.gson:gson:2.8.9"
circularImageView = "de.hdodenhof:circleimageview:3.1.0"
# ------------------------------------------ recyclerview ------------------------------------------
recyclerview = "androidx.recyclerview:recyclerview:1.2.1"
recyclerviewSelection = "androidx.recyclerview:recyclerview-selection:1.1.0"
# ------------------------------------------ retrofit ----------------------------------------------
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitConverterGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
ok2curl = "com.github.mrmike:ok2curl:0.7.0"
chuckerDebug = "com.github.chuckerteam.chucker:library:3.5.2"
okhttpCore = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttpVersion" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttpVersion" }
# ------------------------------------------ glide -------------------------------------------------
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glideCompiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
# ------------------------------------------ firebase ----------------------------------------------
firebaseBom = "com.google.firebase:firebase-bom:25.12.0"
firebaseCrashlytics = "com.google.firebase:firebase-crashlytics-ktx:18.2.4"
firebaseCore = "com.google.firebase:firebase-core:19.0.2"
firebaseMessaging = "com.google.firebase:firebase-messaging:22.0.0"
firebaseAnalytics = "com.google.firebase:firebase-analytics-ktx:20.0.0"
# ------------------------------------------ twillo ------------------------------------------------
videoAndroid = "com.twilio:video-android:5.9.0"
audioswitch = "com.twilio:audioswitch:1.1.2"
# ------------------------------------------ kotlin ------------------------------------------------
kotlinStdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlinReflection = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
# ------------------------------------------ hilt ------------------------------------------
hiltAndroid = "com.google.dagger:hilt-android:2.40"
hiltCompiler = "com.google.dagger:hilt-android-compiler:2.40"
# ------------------------------------------ coroutines --------------------------------------------
coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
#coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core"
#coroutinesTest = "org.jetbrains.kotlinx:kotlinx-coroutines-test"
# ------------------------------------------ workmanager -------------------------------------------
workKtx = { module = "androidx.work:work-runtime-ktx", version.ref = "workVersion" }
workGCM = { module = "androidx.work:work-gcm", version.ref = "workVersion" }
workMultiProcess = { module = "androidx.work:work-multiprocess", version.ref = "workVersion" }
# ------------------------------------------ security ----------------------------------------------
securityCrypto = "androidx.security:security-crypto:1.0.0"
securityIdentityCredential = "androidx.security:security-identity-credential:1.0.0-alpha03"
securityAppAuthenticator = "androidx.security:security-app-authenticator:1.0.0-alpha02"
# ------------------------------------------ emoji2 ------------------------------------------------
emoji2 = { module = "androidx.emoji2:emoji2", version.ref = "emoji2Version" }
emoji2Views = { module = "androidx.emoji2:emoji2-views", version.ref = "emoji2Version" }
emoji2Helper = { module = "androidx.emoji2:emoji2-views-helper", version.ref = "emoji2Version" }
# ------------------------------------------ fragment ----------------------------------------------
# Kotlin
fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentVersion" }
# Testing Fragments in Isolation
fragmentTesting = { module = "androidx.fragment:fragment-testing", version.ref = "fragmentVersion" }
# ------------------------------------------ test --------------------------------------------------
junit = "junit:junit:4.13.2"
testRunner = "androidx.test:runner:1.4.0"
espressoCore = "androidx.test.espresso:espresso-core:3.4.0"
# ------------------------------------------ camera ------------------------------------------------
# The following line is optional, as the core library is included indirectly by camera-camera2
cameraCore = { module = "androidx.camera:camera-core", version.ref = "cameraxVersion" }
camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraxVersion" }
# If you want to additionally use the CameraX Lifecycle library
cameraLifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraxVersion" }
# If you want to additionally use the CameraX View class
cameraView = "androidx.camera:camera-view:1.0.0-alpha30"
# If you want to additionally use the CameraX Extensions library
cameraExt = "androidx.camera:camera-extensions:1.0.0-alpha30"
# ------------------------------------------ core --------------------------------------------------
# Java language implementation
coreJava = { module = "androidx.core:core", version.ref = "coreVersion" }
# Kotlin
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreVersion" }
# To use RoleManagerCompat
coreRole = "androidx.core:core-role:1.0.0"
# To use the Animator APIs
coreAnimation = "androidx.core:core-animation:1.0.0-alpha02"
# To test the Animator APIs
coreAnimationTesting = "androidx.core:core-animation-testing:1.0.0-alpha02"
# Optional - to use ShortcutManagerCompat to donate shortcuts to be used by Google
coreGoogleShortcuts = "androidx.core:core-google-shortcuts:1.0.0"
# Optional - APIs for SplashScreen, including compatiblity helpers on devices prior Android 12
coreSplashScreen = "androidx.core:core-splashscreen:1.0.0-alpha02"

# ------------------------------------------ lifecycle ---------------------------------------------
# ViewModel
lifecycleViewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" }
# ViewModel utilities for Compose
lifecycleViewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleVersion" }
# LiveData
lifecycleLivedataKtx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleVersion" }
# Lifecycles only (without ViewModel or LiveData)
lifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleVersion" }
# Saved state module for ViewModel
lifecycleViewModelSavedState = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycleVersion" }
# Annotation processor kapt
lifecycleCompiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycleVersion" }
# alternately - if using Java8, use the following instead of lifecycle-compiler
lifecycleCommonJava8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycleVersion" }
# optional - helpers for implementing LifecycleOwner in a Service
lifecycleService = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycleVersion" }
# optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycleVersion" }
# optional - ReactiveStreams support for LiveData
lifecycleReactiveStreams = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "lifecycleVersion" }
# optional - Test helpers for LiveData
coreTesting = { module = "androidx.arch.core:core-testing", version.ref = "archVersion" }

# ------------------------------------------ navigation --------------------------------------------
# Kotlin
navigationFragmentKtx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navVersion" }
navigationUI = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navVersion" }
# Feature module Support
navigationDynamicFeature = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "navVersion" }
# Testing Navigation
navigationTesting = { module = "androidx.navigation:navigation-testing", version.ref = "navVersion" }
# Jetpack Compose Integration
#navigationCompose = "androidx.navigation:navigation-compose:"

# ------------------------------------------ room --------------------------------------------------
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
roomExt = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
roomPaging = "androidx.room:room-paging:2.4.0-beta01"
# --------------------------------------------------------------------------------------------------
# ------------------------------------------ bundles -----------------------------------------------
# --------------------------------------------------------------------------------------------------
[bundles]
twillo = ["videoAndroid", "audioswitch"]
network = ["retrofit", "retrofitConverterGson", "loggingInterceptor", "okhttpCore", "ok2curl"]
firebase = ["firebaseCrashlytics", "firebaseCore", "firebaseMessaging", "firebaseAnalytics", ]
test = ["junit", "testRunner", "espressoCore", ]
camera = ["cameraCore", "camera2", "cameraLifecycle", "cameraView", "cameraExt", ]

lifecycle = [
    "lifecycleViewModelKtx",
    "lifecycleLivedataKtx",
    "lifecycleRuntimeKtx",
    "lifecycleViewModelSavedState",
    "lifecycleCommonJava8",
    "lifecycleService",
    "lifecycleProcess",
    "lifecycleReactiveStreams",
]
navigation = [
    "navigationFragmentKtx",
    "navigationUI",
    "navigationDynamicFeature",
]
kotlin = [
    "kotlinStdlib",
    "kotlinReflection"
]
workManager = [
    "workKtx",
    "workGCM",
    "workMultiProcess"
]

security = [
    "securityCrypto",
    "securityIdentityCredential",
    "securityAppAuthenticator",
]

emoji = [
    "emoji2",
    "emoji2Views",
    "emoji2Helper",
]

core = [
    "coreKtx",
    "coreRole",
    "coreAnimation",
    "coreGoogleShortcuts",
    "coreSplashScreen"
]
